BufferPool.java:
1. Instead of the HashMap we chose in lab_1, we replaced it with a double linked list to cache the pages. It makes it easier
to implement LRU policy. It is difficult to maintain visiting count in HashMap. But we can easily shift nodes around in a
linked list in constant time.
2. We have consider Least Recently Used policy while evicting a page from buffer pool.
BTreeFile.java:
2. While implementing insertion, we inserted data which is less than or equal to key value in the left child, greater than key value
in the right child of the parent data entry.

We faced little difficulty while trying to figure out a way to implement LCU with hash map. Then after some research we decided to
go with double linked list.